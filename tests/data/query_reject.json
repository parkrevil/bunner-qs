[
  {
    "name": "array_index_reset_conflict_0",
    "input": "items_0[]=a&items_0[1]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "array_index_reset_conflict_1",
    "input": "items_1[]=a&items_1[1]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "array_index_reset_conflict_2",
    "input": "items_2[]=a&items_2[1]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_array_object_0",
    "input": "mix_0[]=on&mix_0[flag]=true",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_array_object_1",
    "input": "mix_1[]=on&mix_1[flag]=true",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_array_object_2",
    "input": "mix_2[]=on&mix_2[flag]=true",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_array_object_3",
    "input": "mix_3[]=on&mix_3[flag]=true",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_numeric_scalar_0",
    "input": "node_0[0]=a&node_0[key]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_numeric_scalar_1",
    "input": "node_1[0]=a&node_1[key]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_numeric_scalar_2",
    "input": "node_2[0]=a&node_2[key]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "conflict_numeric_scalar_3",
    "input": "node_3[0]=a&node_3[key]=b",
    "expect": "duplicate_key"
  },
  {
    "name": "control_character",
    "input": "bad=%00",
    "expect": "invalid_character"
  },
  {
    "name": "deep_non_contiguous_index_0",
    "input": "grid_0[0][0]=a&grid_0[0][2]=c",
    "expect": "duplicate_key"
  },
  {
    "name": "deep_non_contiguous_index_1",
    "input": "grid_1[0][0]=a&grid_1[0][2]=c",
    "expect": "duplicate_key"
  },
  {
    "name": "deep_non_contiguous_index_2",
    "input": "grid_2[0][0]=a&grid_2[0][2]=c",
    "expect": "duplicate_key"
  },
  {
    "name": "depth_exceeded_limit_0",
    "input": "root[branch]=deep",
    "expect": "depth_exceeded",
    "options": {
      "max_depth": 0
    }
  },
  {
    "name": "depth_exceeded_limit_1",
    "input": "root[branch][branch]=deep",
    "expect": "depth_exceeded",
    "options": {
      "max_depth": 1
    }
  },
  {
    "name": "depth_exceeded_limit_2",
    "input": "root[branch][branch][branch]=deep",
    "expect": "depth_exceeded",
    "options": {
      "max_depth": 2
    }
  },
  {
    "name": "depth_exceeded_limit_3",
    "input": "root[branch][branch][branch][branch]=deep",
    "expect": "depth_exceeded",
    "options": {
      "max_depth": 3
    }
  },
  {
    "name": "duplicate_append_and_index",
    "input": "arr[]=1&arr[]=2&arr[0]=override",
    "expect": "duplicate_key"
  },
  {
    "name": "duplicate_scalar",
    "input": "foo=1&foo=2",
    "expect": "duplicate_key"
  },
  {
    "name": "input_too_long_128",
    "input": "len=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 128
    }
  },
  {
    "name": "input_too_long_16",
    "input": "len=xxxxxxxxxxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 16
    }
  },
  {
    "name": "input_too_long_256",
    "input": "len=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 256
    }
  },
  {
    "name": "input_too_long_32",
    "input": "len=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 32
    }
  },
  {
    "name": "input_too_long_512",
    "input": "len=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 512
    }
  },
  {
    "name": "input_too_long_64",
    "input": "len=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 64
    }
  },
  {
    "name": "input_too_long_8",
    "input": "len=xxxxxxxxx",
    "expect": "input_too_long",
    "options": {
      "max_length": 8
    }
  },
  {
    "name": "invalid_percent_encoding",
    "input": "broken=%E4%ZZ",
    "expect": "invalid_percent_encoding"
  },
  {
    "name": "invalid_utf8_0",
    "input": "bin=%80",
    "expect": "invalid_utf8"
  },
  {
    "name": "invalid_utf8_1",
    "input": "bin=%C1%BF",
    "expect": "invalid_utf8"
  },
  {
    "name": "invalid_utf8_2",
    "input": "bin=%F0%80%80%80",
    "expect": "invalid_utf8"
  },
  {
    "name": "mixed_append_numeric",
    "input": "items[]=1&items[0]=2",
    "expect": "duplicate_key"
  },
  {
    "name": "mixed_scalar_and_nested",
    "input": "user=name&user[age]=30",
    "expect": "duplicate_key"
  },
  {
    "name": "nested_scalar_override_0",
    "input": "profile_0[name]=A&profile_0=override",
    "expect": "duplicate_key"
  },
  {
    "name": "nested_scalar_override_1",
    "input": "profile_1[name]=A&profile_1=override",
    "expect": "duplicate_key"
  },
  {
    "name": "nested_scalar_override_2",
    "input": "profile_2[name]=A&profile_2=override",
    "expect": "duplicate_key"
  },
  {
    "name": "nested_scalar_override_3",
    "input": "profile_3[name]=A&profile_3=override",
    "expect": "duplicate_key"
  },
  {
    "name": "non_contiguous_index",
    "input": "items[0]=x&items[2]=z",
    "expect": "duplicate_key"
  },
  {
    "name": "owasp_null_mix",
    "input": "a=1&b=%00%00&c=2",
    "expect": "invalid_character"
  },
  {
    "name": "payloads_control_newline",
    "input": "inject=foo%0Abar",
    "expect": "invalid_character"
  },
  {
    "name": "payloads_control_tab",
    "input": "inject=foo%09bar",
    "expect": "invalid_character"
  },
  {
    "name": "too_many_params_limit_0",
    "input": "p0=v0",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 0
    }
  },
  {
    "name": "too_many_params_limit_1",
    "input": "p0=v0&p1=v1",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 1
    }
  },
  {
    "name": "too_many_params_limit_16",
    "input": "p0=v0&p1=v1&p2=v2&p3=v3&p4=v4&p5=v5&p6=v6&p7=v7&p8=v8&p9=v9&p10=v10&p11=v11&p12=v12&p13=v13&p14=v14&p15=v15&p16=v16",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 16
    }
  },
  {
    "name": "too_many_params_limit_2",
    "input": "p0=v0&p1=v1&p2=v2",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 2
    }
  },
  {
    "name": "too_many_params_limit_32",
    "input": "p0=v0&p1=v1&p2=v2&p3=v3&p4=v4&p5=v5&p6=v6&p7=v7&p8=v8&p9=v9&p10=v10&p11=v11&p12=v12&p13=v13&p14=v14&p15=v15&p16=v16&p17=v17&p18=v18&p19=v19&p20=v20&p21=v21&p22=v22&p23=v23&p24=v24&p25=v25&p26=v26&p27=v27&p28=v28&p29=v29&p30=v30&p31=v31&p32=v32",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 32
    }
  },
  {
    "name": "too_many_params_limit_4",
    "input": "p0=v0&p1=v1&p2=v2&p3=v3&p4=v4",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 4
    }
  },
  {
    "name": "too_many_params_limit_8",
    "input": "p0=v0&p1=v1&p2=v2&p3=v3&p4=v4&p5=v5&p6=v6&p7=v7&p8=v8",
    "expect": "too_many_parameters",
    "options": {
      "max_params": 8
    }
  },
  {
    "name": "unexpected_question_mark",
    "input": "foo?bar=baz",
    "expect": "unexpected_question_mark"
  },
  {
    "name": "unmatched_bracket_0",
    "input": "user]=1",
    "expect": "unmatched_bracket"
  },
  {
    "name": "unmatched_bracket_1",
    "input": "[broken=1",
    "expect": "unmatched_bracket"
  },
  {
    "name": "unmatched_bracket_2",
    "input": "arr[0=1",
    "expect": "unmatched_bracket"
  },
  {
    "name": "unmatched_bracket_3",
    "input": "key]extra=1",
    "expect": "unmatched_bracket"
  }
]
